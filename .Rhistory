# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
#rownames(c.mat) <- colnames(x) # row names for results = column names of data
# <- round(c.mat,2) # round off to two decimal places
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10",) # row names for results = column names of data
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5","Student 6","Student 7","Student 8","Student 9","Student 10",) # row names for results = column names of data
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Students","Student 1","Student 2","Student 3","Student 4","Student 5","Student 6","Student 7","Student 8","Student 9","Student 10",) # row names for results = column names of data
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5","Student 6","Student 7","Student 8","Student 9","Student 10") # row names for results = column names of data
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- sum_of_scores / (ncol(x) * 100) #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10")
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- (sum_of_scores / (ncol(x) * 100)) * 100 #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10")
print(result_matrix) # print or view results
}
main_func(std_data)
View(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- (sum_of_scores / (ncol(x) * 100)) * 100 #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10")
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- (sum_of_scores / (ncol(x) * 100)) * 100 #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses) # combine all results
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10")
print(result_matrix) # print or view results
}
main_func(std_data)
# Getting the data
std_data <- read.csv("students_score.csv") #load data into variable
########################   Functions   #############################
# Calculating CWA
cwa <- function(x)
{
sum_of_scores <- sum(x) #for each student, sum up each row
result <- (sum_of_scores / (ncol(x) * 100)) * 100 #divide the sum by total marks to be obtained
}
# Calculating courses passed
passed <- function(x)
{
student_i <- x #subset row into vector
passed_courses <- student_i[student_i > 40] ##input all numbers less than or equal to 40 into vector y
length(passed_courses) #count the number of passed courses
}
# Calculating courses failed
failed <- function(x)
{
student_i <- x #subset row into vector
failed_courses <- student_i[student_i <= 40] #input all numbers less than or equal to 40 into vector y
length(failed_courses) #count the number of failed courses
}
#Calculating courses for which student had grade "A"
gradeA <- function(x)
{
student_i <- x #subset row into vector
gradeA_courses <- student_i[student_i >= 70] #input all courses of score 70 and above
length(gradeA_courses) #count the number of such courses
}
########################   Functions end  #############################
main_func <- function(x)
{
result_matrix <- matrix(0,nrow = nrow(x), ncol=4) #Empty matrix to store results
for (i in 1:nrow(x))
{
y = x[i,]
computed_cwa <- cwa(y)
courses_passed <- passed(y)
courses_failed <- failed(y)
gradeA_courses <- gradeA(y)
compiled <- c(computed_cwa, courses_passed, courses_failed, gradeA_courses)
result_matrix[i,] <- compiled # Fill empty matrix with results
}
colnames(result_matrix) <- c("CWA", "Courses passed", "Courses failed", "Grade A courses")
rownames(result_matrix) <- c("Student 1","Student 2","Student 3","Student 4","Student 5",
"Student 6","Student 7","Student 8","Student 9","Student 10")
print(result_matrix) # print or view results
}
main_func(std_data)
View(std_data)
